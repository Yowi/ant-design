// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Slider rtl render component should be rendered correctly in RTL direction 1`] = `
<div
  class="ant-slider ant-slider-rtl"
>
  <div
    class="ant-slider-rail"
  />
  <div
    class="ant-slider-track"
    style="right:0%;left:auto;width:0%"
  />
  <div
    class="ant-slider-step"
  />
  <div
    aria-disabled="false"
    aria-valuemax="100"
    aria-valuemin="0"
    aria-valuenow="0"
    class="ant-slider-handle"
    role="slider"
    style="right:0%;left:auto;transform:translateX(+50%)"
    tabindex="0"
  />
  <div
    class="ant-slider-mark"
  />
</div>
`;

exports[`Slider should render in RTL direction 1`] = `
<div
  class="ant-slider ant-slider-rtl"
>
  <div
    class="ant-slider-rail"
  />
  <div
    class="ant-slider-track"
    style="right:0%;left:auto;width:30%"
  />
  <div
    class="ant-slider-step"
  />
  <div
    aria-disabled="false"
    aria-valuemax="100"
    aria-valuemin="0"
    aria-valuenow="30"
    class="ant-slider-handle ant-tooltip-open"
    role="slider"
    style="right:30%;left:auto;transform:translateX(+50%)"
    tabindex="0"
  />
  <div>
    <div
      class="ant-tooltip ant-slider-tooltip ant-tooltip-rtl"
      style="opacity:0"
    >
      <div
        class="ant-tooltip-content"
      >
        <div
          class="ant-tooltip-arrow"
        />
        <div
          class="ant-tooltip-inner"
          role="tooltip"
        >
          30
        </div>
      </div>
    </div>
  </div>
  <div
    class="ant-slider-mark"
  />
</div>
`;

exports[`Slider should show tooltip when hovering slider handler 1`] = `
<div>
  <div
    class="ant-tooltip ant-slider-tooltip"
    style="opacity:0"
  >
    <div
      class="ant-tooltip-content"
    >
      <div
        class="ant-tooltip-arrow"
      />
      <div
        class="ant-tooltip-inner"
        role="tooltip"
      >
        30
      </div>
    </div>
  </div>
</div>
`;

exports[`Slider should show tooltip when hovering slider handler 2`] = `
<div>
  <div
    class="ant-tooltip ant-slider-tooltip ant-tooltip-hidden"
  >
    <div
      class="ant-tooltip-content"
    >
      <div
        class="ant-tooltip-arrow"
      />
      <div
        class="ant-tooltip-inner"
        role="tooltip"
      >
        30
      </div>
    </div>
  </div>
</div>
`;

exports[`Slider slider tooltip visible 1`] = `<span />`;

exports[`Slider slider tooltip visible 2`] = `
<SliderTooltip
  title="30"
  visible={true}
>
  <Tooltip
    arrowPointAtCenter={false}
    autoAdjustOverflow={true}
    mouseEnterDelay={0.1}
    mouseLeaveDelay={0.1}
    placement="top"
    title="30"
    transitionName="zoom-big-fast"
    visible={true}
  >
    <ForwardRef(Tooltip)
      arrowPointAtCenter={false}
      autoAdjustOverflow={true}
      builtinPlacements={
        Object {
          "bottom": Object {
            "ignoreShake": true,
            "offset": Array [
              0,
              4,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "tc",
              "bc",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "bottomLeft": Object {
            "ignoreShake": true,
            "offset": Array [
              0,
              4,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "tl",
              "bl",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "bottomRight": Object {
            "ignoreShake": true,
            "offset": Array [
              0,
              4,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "tr",
              "br",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "left": Object {
            "ignoreShake": true,
            "offset": Array [
              -4,
              0,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "cr",
              "cl",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "leftBottom": Object {
            "ignoreShake": true,
            "offset": Array [
              -4,
              0,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "br",
              "bl",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "leftTop": Object {
            "ignoreShake": true,
            "offset": Array [
              -4,
              0,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "tr",
              "tl",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "right": Object {
            "ignoreShake": true,
            "offset": Array [
              4,
              0,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "cl",
              "cr",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "rightBottom": Object {
            "ignoreShake": true,
            "offset": Array [
              4,
              0,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "bl",
              "br",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "rightTop": Object {
            "ignoreShake": true,
            "offset": Array [
              4,
              0,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "tl",
              "tr",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "top": Object {
            "ignoreShake": true,
            "offset": Array [
              0,
              -4,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "bc",
              "tc",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "topLeft": Object {
            "ignoreShake": true,
            "offset": Array [
              0,
              -4,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "bl",
              "tl",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
          "topRight": Object {
            "ignoreShake": true,
            "offset": Array [
              0,
              -4,
            ],
            "overflow": Object {
              "adjustX": 1,
              "adjustY": 1,
            },
            "points": Array [
              "br",
              "tr",
            ],
            "targetOffset": Array [
              0,
              0,
            ],
          },
        }
      }
      mouseEnterDelay={0.1}
      mouseLeaveDelay={0.1}
      onPopupAlign={[Function]}
      onVisibleChange={[Function]}
      overlay="30"
      overlayClassName=""
      placement="top"
      prefixCls="ant-tooltip"
      title="30"
      transitionName="zoom-big-fast"
      visible={true}
    >
      <Trigger
        action={
          Array [
            "hover",
          ]
        }
        afterPopupVisibleChange={[Function]}
        arrowPointAtCenter={false}
        autoAdjustOverflow={true}
        blurDelay={0.15}
        builtinPlacements={
          Object {
            "bottom": Object {
              "ignoreShake": true,
              "offset": Array [
                0,
                4,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tc",
                "bc",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "bottomLeft": Object {
              "ignoreShake": true,
              "offset": Array [
                0,
                4,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tl",
                "bl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "bottomRight": Object {
              "ignoreShake": true,
              "offset": Array [
                0,
                4,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tr",
                "br",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "left": Object {
              "ignoreShake": true,
              "offset": Array [
                -4,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "cr",
                "cl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "leftBottom": Object {
              "ignoreShake": true,
              "offset": Array [
                -4,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "br",
                "bl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "leftTop": Object {
              "ignoreShake": true,
              "offset": Array [
                -4,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tr",
                "tl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "right": Object {
              "ignoreShake": true,
              "offset": Array [
                4,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "cl",
                "cr",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "rightBottom": Object {
              "ignoreShake": true,
              "offset": Array [
                4,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "bl",
                "br",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "rightTop": Object {
              "ignoreShake": true,
              "offset": Array [
                4,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tl",
                "tr",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "top": Object {
              "ignoreShake": true,
              "offset": Array [
                0,
                -4,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "bc",
                "tc",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "topLeft": Object {
              "ignoreShake": true,
              "offset": Array [
                0,
                -4,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "bl",
                "tl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "topRight": Object {
              "ignoreShake": true,
              "offset": Array [
                0,
                -4,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "br",
                "tr",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
          }
        }
        defaultPopupVisible={false}
        destroyPopupOnHide={false}
        focusDelay={0}
        getDocument={[Function]}
        getPopupClassNameFromAlign={[Function]}
        hideAction={Array []}
        mask={false}
        maskClosable={true}
        mouseEnterDelay={0.1}
        mouseLeaveDelay={0.1}
        onPopupAlign={[Function]}
        onPopupVisibleChange={[Function]}
        overlay="30"
        popup={[Function]}
        popupAlign={Object {}}
        popupClassName=""
        popupPlacement="top"
        popupStyle={Object {}}
        popupTransitionName="zoom-big-fast"
        popupVisible={true}
        prefixCls="ant-tooltip"
        showAction={Array []}
        title="30"
        visible={true}
      >
        <span
          className="ant-tooltip-open"
          key="trigger"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        />
        <MockPortal
          didUpdate={[Function]}
          getContainer={[Function]}
          key="portal"
        >
          <Popup
            align={
              Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  -4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "bc",
                  "tc",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              }
            }
            className=""
            destroyPopupOnHide={false}
            getClassNameFromAlign={[Function]}
            getRootDomNode={[Function]}
            mask={false}
            onAlign={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onTouchStart={[Function]}
            prefixCls="ant-tooltip"
            style={Object {}}
            transitionName="zoom-big-fast"
            visible={true}
          >
            <div>
              <ForwardRef
                motionAppear={false}
                motionEnter={false}
                motionLeave={false}
                motionName="zoom-big-fast"
                onEnterEnd={[Function]}
                onLeaveEnd={[Function]}
                removeOnLeave={false}
                visible={true}
              >
                <CSSMotion
                  internalRef={null}
                  motionAppear={false}
                  motionEnter={false}
                  motionLeave={false}
                  motionName="zoom-big-fast"
                  onEnterEnd={[Function]}
                  onLeaveEnd={[Function]}
                  removeOnLeave={false}
                  visible={true}
                >
                  <Align
                    align={
                      Object {
                        "ignoreShake": true,
                        "offset": Array [
                          0,
                          -4,
                        ],
                        "overflow": Object {
                          "adjustX": 1,
                          "adjustY": 1,
                        },
                        "points": Array [
                          "bc",
                          "tc",
                        ],
                        "targetOffset": Array [
                          0,
                          0,
                        ],
                      }
                    }
                    disabled={true}
                    key="popup"
                    monitorWindowResize={true}
                    onAlign={[Function]}
                    target={[Function]}
                  >
                    <PopupInner
                      className="ant-tooltip"
                      hiddenClassName="ant-tooltip-hidden"
                      onMouseDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      prefixCls="ant-tooltip"
                      style={
                        Object {
                          "opacity": 0,
                          "zIndex": undefined,
                        }
                      }
                      visible={true}
                    >
                      <div
                        className="ant-tooltip"
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                        style={
                          Object {
                            "opacity": 0,
                            "zIndex": undefined,
                          }
                        }
                      >
                        <div
                          className="ant-tooltip-content"
                        >
                          <div
                            className="ant-tooltip-arrow"
                            key="arrow"
                          />
                          <Content
                            key="content"
                            overlay="30"
                            prefixCls="ant-tooltip"
                          >
                            <div
                              className="ant-tooltip-inner"
                              role="tooltip"
                            >
                              30
                            </div>
                          </Content>
                        </div>
                      </div>
                    </PopupInner>
                  </Align>
                </CSSMotion>
              </ForwardRef>
            </div>
          </Popup>
        </MockPortal>
      </Trigger>
    </ForwardRef(Tooltip)>
  </Tooltip>
</SliderTooltip>
`;
